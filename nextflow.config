manifest {
    mainScript = 'poreCov.nf'
}

// default parameters
params {
    max_cores = Runtime.runtime.availableProcessors()
    cores = "8"
    memory = '12'
    help = false
    profile = false

    // inputs
    dir = ''
    fasta = ''
    multifasta = ''
    fastq = ''

    references = ''
    metadata = ''
    barcodeIDs = ''

    // settings
    single = false
    localguppy = false
    buildDB = false
    cloudProcess = false
    one_end = false

    // parameters
    primerV = 'V3'
    minLength = '400'
    maxLength = '700'
    maskBegin = '70'
    maskEnd = '70'
    highlight = 'barcode'
    rm_N_genome = '3'

    // folder structure
    output = 'results'
    cachedir = "singularity_images"
    databases = "references_nCov19"

}

profiles {
    local {
        workDir = "/tmp/nextflow-nCov-$USER"
        includeConfig 'configs/local.config'
        executor {
            name = "local"
            cpus = params.max_cores
            memory = params.memory
        }
    }

    slurm {
        executor {
            name = "slurm"
            queueSize = 100
            // exitReadTimeout = "360 sec"
            // submitRateLimit = '1 / 2 s'
            // pollInterval = '30 sec'
        }        
        params.cloudProcess = true
        process.cache = "lenient"
        includeConfig 'configs/nodes.config'
    }

    docker {
        docker { enabled = true }
        includeConfig 'configs/container.config'
    }

    singularity {
        singularity { 
                enabled = true
                autoMounts = true
                cacheDir = params.cachedir
                //runOptions = "-B /tmp/nextflow-nCov-$USER"
        }
        includeConfig 'configs/container.config'
    }
    gcloud {
        params.cloudProcess = true
        workDir = "/tmp/nextflow-docker_pipelines-$USER"
        bucketDir = 'gs://nextflow-tmp-workdir/workdir-analysis'
        google {  project = 'nextflow-auto' ; zone = 'europe-west1-b' }
        cloud { preemptible = true }
        includeConfig 'configs/gcloud.config'
    }
    
    nanozoo {
        docker { enabled = true }
        google { 
            lifeSciences.preemptible = true
            lifeSciences.bootDiskSize = 20.GB
        }  
        includeConfig 'configs/nodes.config'
        includeConfig 'configs/container.config'
        }
}
